name: Fsutil Zeroing File
id: f792cdc9-43ee-4429-a3c0-ffce4fed1a85
version: 1
description: This search is to detect a suspicious fsutil process to zeroing a target
  file. This technique was seen in lockbit ransomware where it tries to zero out its
  malware path as part of its defense evasion after encrypting the compromised host.
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), process=lower(ucast(map_get(input_event, "process"),
  "string", null)), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), process_path=ucast(map_get(input_event, "process_path"), "string",
  null), parent_process_name=ucast(map_get(input_event, "parent_process_name"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null), dest_user_id=ucast(map_get(input_event,
  "dest_user_id"), "string", null), dest_device_id=ucast(map_get(input_event, "dest_device_id"),
  "string", null) | where process IS NOT NULL AND process_name IS NOT NULL AND process_name="fsutil.exe"
  AND (like (process, "%setzerodata%")) | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", timestamp, 
  "detection_end_time", timestamp, "device_entities", [create_map("uid", ucast(map_get(input_event, "tbd"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", timestamp, "event_id", 10100001, "event_time", timestamp, 
  "finding", create_map("confidence", 90, "confidence_id", 3, 
  "context_ids", [10, 45], "impact", 60, "impact_id", 4,
  "kill_chain_phase", "Exploitation", "kill_chain_phase_id", 4, 
  "risk_level", "Medium", "risk_level_id", 2, "type_id", 1, "ref_event_uid", event_id), 
  "message", "An instance of $parent_process_name$ spawning $process_name$ was identified on endpoint $dest_device_id$ by user $dest_user_id$ atempting to perform file deletion.", "metadata", create_map("log_name", "Endpoint_Processes", "version",
  "1.0.0"), "observables", [create_map("name", "dest_user_id", "role_ids", [4], "type_id", 6, "value", dest_user_id), create_map("name", "dest_device_id", "role_ids", [4], "type_id", 4, "value", dest_device_id), create_map("name", "parent_process_name", "role_ids", [5], "type_id", 15, "value", parent_process_name), create_map("name", "process_name", "role_ids", [6], "type_id", 15, "value", process_name)], "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Fsutil Zeroing File"), "start_time", timestamp, "time", timestamp,
  "user_entities", [create_map("uid", "tbd")]) | into write_ssa_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA. Tune and filter known instances where renamed net.exe may be used.
known_false_positives: System administrators or scripts may delete user accounts via
  this technique. Filter as needed.
references:
- https://app.any.run/tasks/e0ac072d-58c9-4f53-8a3b-3e491c7ac5db/
- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-file
tags:
  analytic_story:
  - Ransomware
  cis20: []
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1070
  nist: []
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  - process
  risk_score: 54
  security_domain: endpoint
  risk_severity: medium
test:
  name: Fsutil Zeroing File Unit Test
  tests:
  - name: Fsutil Zeroing File
    file: endpoint/ssa___fsutil_zeroing_file.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1070/fsutil_file_zero/windows-security.log
      source: WinEventLog:Security
