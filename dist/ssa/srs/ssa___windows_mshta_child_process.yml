name: Windows MSHTA Child Process
id: f63f7e9c-9526-11ec-9fc7-acde48001122
version: 1
description: The following analytic identifies child processes spawning from  "mshta.exe".
  The search will return the first time and last time these command-line arguments
  were used for these executions, as well as the target system, the user, parent process
  "mshta.exe" and its child process.
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), process=lower(ucast(map_get(input_event, "process"),
  "string", null)), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), process_path=ucast(map_get(input_event, "process_path"), "string",
  null), parent_process_name=ucast(map_get(input_event, "parent_process_name"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null), dest_user_id=ucast(map_get(input_event,
  "dest_user_id"), "string", null), dest_device_id=ucast(map_get(input_event, "dest_device_id"),
  "string", null) | where process IS NOT NULL AND process_name IS NOT NULL AND parent_process_name
  IS NOT NULL | where parent_process_name="mshta.exe" AND process_name="powershell.exe"
  OR process_name="cmd.exe" OR process_name="scrcons.exe" OR process_name="colorcpl.exe"
  OR process_name="msbuild.exe" OR process_name="microsoft.workflow.compiler.exe"
  OR process_name="searchprotocolhost.exe" OR process_name="cscript.exe"  OR process_name="wscript.exe"
  | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", timestamp, 
  "detection_end_time", timestamp, "device_entities", [create_map("uid", ucast(map_get(input_event, "tbd"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", timestamp, "event_id", 10100001, "event_time", timestamp, 
  "finding", create_map("confidence", 100, "confidence_id", 3, 
  "context_ids", [10, 45], "impact", 80, "impact_id", 5,
  "kill_chain_phase", "Exploitation", "kill_chain_phase_id", 4, 
  "risk_level", "Critical", "risk_level_id", 4, "type_id", 1, "ref_event_uid", event_id), 
  "message", "An instance of $parent_process_name$ spawning $process_name$ was identified on endpoint $dest_device_id$ by user $dest_user_id$ attempting to access a remote destination to download an additional payload.", "metadata", create_map("log_name", "Endpoint_Processes", "version",
  "1.0.0"), "observables", [create_map("name", "dest_user_id", "role_ids", [4], "type_id", 6, "value", dest_user_id), create_map("name", "dest_device_id", "role_ids", [4], "type_id", 4, "value", dest_device_id), create_map("name", "parent_process_name", "role_ids", [5], "type_id", 15, "value", parent_process_name), create_map("name", "process_name", "role_ids", [6], "type_id", 15, "value", process_name)], "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Windows MSHTA Child Process"), "start_time", timestamp, "time", timestamp,
  "user_entities", [create_map("uid", "tbd")]) | into write_ssa_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: Although unlikely, some legitimate applications may exhibit
  this behavior, triggering a false positive.
references:
- https://github.com/redcanaryco/AtomicTestHarnesses
- https://redcanary.com/blog/introducing-atomictestharnesses/
tags:
  analytic_story:
  - Suspicious MSHTA Activity
  - Living Off The Land
  cis20:
  - CIS 8
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1218.005
  - T1218
  nist:
  - PR.PT
  - DE.CM
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  - process
  risk_score: 80
  security_domain: endpoint
  risk_severity: high
test:
  name: Windows MSHTA Child Process Unit Test
  tests:
  - name: Windows MSHTA Child Process
    file: endpoint/ssa___windows_mshta_child_process.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.005/atomic_red_team/windows-security.log
      source: WinEventLog:Security
