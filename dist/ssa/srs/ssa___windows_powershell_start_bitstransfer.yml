name: Windows PowerShell Start-BitsTransfer
id: 0bafd086-8f61-11ec-996e-acde48001122
version: 1
description: Start-BitsTransfer is the PowerShell "version" of BitsAdmin.exe. Similar
  functionality is present. This technique variation is not as commonly used by adversaries,
  but has been abused in the past. Lesser known uses include the ability to set the
  `-TransferType` to `Upload` for exfiltration of files. In an instance where `Upload`
  is used, it is highly possible files will be archived. During triage, review parallel
  processes and process lineage. Capture any files on disk and review. For the remote
  domain or IP, what is the reputation?
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), process=lower(ucast(map_get(input_event, "process"),
  "string", null)), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), process_path=ucast(map_get(input_event, "process_path"), "string",
  null), parent_process_name=ucast(map_get(input_event, "parent_process_name"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null), dest_user_id=ucast(map_get(input_event,
  "dest_user_id"), "string", null), dest_device_id=ucast(map_get(input_event, "dest_device_id"),
  "string", null) | where process IS NOT NULL AND process_name IS NOT NULL | where
  process_name="pwsh.exe" OR process_name="pwsh.exe" OR process_name="sqlps.exe" OR
  process_name="sqltoolsps.exe" OR process_name="powershell.exe" OR process_name="powershell_ise.exe"
  | where (like (process, "%start-bitstransfer%")) | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", timestamp, 
  "detection_end_time", timestamp, "device_entities", [create_map("uid", ucast(map_get(input_event, "tbd"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", timestamp, "event_id", 10100001, "event_time", timestamp, 
  "finding", create_map("confidence", 70, "confidence_id", 3, 
  "context_ids", [10, 50], "impact", 70, "impact_id", 4,
  "kill_chain_phase", "Exploitation", "kill_chain_phase_id", 4, 
  "risk_level", "Medium", "risk_level_id", 2, "type_id", 1, "ref_event_uid", event_id), 
  "message", "An instance of $parent_process_name$ spawning $process_name$ was identified on endpoint $dest$ by user $dest_user_id$ attempting to download a file.", "metadata", create_map("log_name", "Endpoint_Processes", "version",
  "1.0.0"), "observables", [create_map("name", "dest_user_id", "role_ids", [4], "type_id", 6, "value", dest_user_id), create_map("name", "dest_device_id", "role_ids", [4], "type_id", 4, "value", dest_device_id), create_map("name", "parent_process_name", "role_ids", [5], "type_id", 15, "value", parent_process_name), create_map("name", "process_name", "role_ids", [6], "type_id", 15, "value", process_name)], "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Windows PowerShell Start-BitsTransfer"), "start_time", timestamp, "time", timestamp,
  "user_entities", [create_map("uid", "tbd")]) | into write_ssa_finding_events();'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint_Processess` datamodel.
known_false_positives: Limited false positives. It is possible administrators will
  utilize Start-BitsTransfer for administrative tasks, otherwise filter based parent
  process or command-line arguments.
references:
- https://isc.sans.edu/diary/Investigating+Microsoft+BITS+Activity/23281
- https://docs.microsoft.com/en-us/windows/win32/bits/using-windows-powershell-to-create-bits-transfer-jobs
tags:
  analytic_story:
  - BITS Jobs
  - Living Off The Land
  cis20: []
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1197
  - T1105
  nist: null
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  - process
  risk_score: 49
  security_domain: endpoint
  risk_severity: low
test:
  name: Windows PowerShell Start-BitsTransfer Unit Test
  tests:
  - name: Windows PowerShell Start-BitsTransfer
    file: endpoint/ssa___windows_powershell_start_bitstransfer.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: T1197_windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1197/atomic_red_team/T1197_windows-security.log
      source: WinEventLog:Security
