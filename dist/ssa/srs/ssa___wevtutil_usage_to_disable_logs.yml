name: Wevtutil Usage To Disable Logs
id: a4bdc944-cdd9-11eb-ac97-acde48001122
version: 2
description: This search is to detect execution of wevtutil.exe to disable logs. This
  technique was seen in several ransomware to disable the event logs to evade alerts
  and detections in compromised host.
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), process=ucast(map_get(input_event, "process"), "string",
  null), process_name=ucast(map_get(input_event, "process_name"), "string", null),
  process_path=ucast(map_get(input_event, "process_path"), "string", null), parent_process_name=ucast(map_get(input_event,
  "parent_process_name"), "string", null), event_id=ucast(map_get(input_event, "event_id"),
  "string", null), dest_user_id=ucast(map_get(input_event, "dest_user_id"), "string",
  null), dest_device_id=ucast(map_get(input_event, "dest_device_id"), "string", null)
  | where process IS NOT NULL AND like(process, "% sl %") AND like(process, "%/e:false%")
  AND process_name="wevtutil.exe" | eval start_time=timestamp, end_time=timestamp,
  entities=mvappend(ucast(map_get(input_event, "dest_user_id"), "string", null), ucast(map_get(input_event,
  "dest_device_id"), "string", null)) | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", start_time, 
  "detection_end_time", end_time, "device_entities", [create_map("uid", ucast(map_get(input_event, "enrichments.device_entities.device.uid"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", end_time, "event_id", 10100001, "event_time", timestamp, 
  "finding", create_map("confidence", 90, "confidence_id", 3, 
  "context_ids", [10, 45], "impact", 70, "impact_id", 4,
  "kill_chain_phase", Exploitation, "kill_chain_phase_id", 4, 
  "risk_level", High, "risk_level_id", 3, "type_id", 1, "ref_event_uid", event_id), 
  "message", A wevtutil process $process_name$ with commandline $process$ to disable event logs in host $dest_device_id$, "metadata", create_map("log_name", Endpoint_Processes, "version",
  "1.0.0"), "observables", , "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Wevtutil Usage To Disable Logs", "uid", "a4bdc944-cdd9-11eb-ac97-acde48001122", "version", "1"), "start_time", start_time, "time", start_time,
  "user_entities", [create_map("uid", ucast(map_get(input_event, "enrichments.user_entities.user.uid"),"string", null))]) | into write_ssa_finding_events();'
how_to_implement: You must be ingesting data that records process activity from your
  hosts to populate the Endpoint data model in the Processes node. You must also be
  ingesting logs with both the process name and command line from your endpoints.
  The command-line arguments are mapped to the "process" field in the Endpoint data
  model.
known_false_positives: network operator may disable audit event logs for debugging
  purposes.
references:
- https://www.bleepingcomputer.com/news/security/new-ransom-x-ransomware-used-in-texas-txdot-cyberattack/
tags:
  analytic_story:
  - Windows Log Manipulation
  - Ransomware
  cis20:
  - CIS 8
  - CIS 13
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1070
  - T1070.001
  nist:
  - PR.DS
  - PR.IP
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  risk_score: 63
  security_domain: endpoint
  risk_severity: medium
test:
  name: Wevtutil Usage To Disable Logs Unit Test
  tests:
  - name: Wevtutil Usage To Disable Logs
    file: endpoint/ssa___wevtutil_usage_to_disable_logs.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: disable_evt.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1070.001/ssa_wevtutil/disable_evt.log
      source: WinEventLog:Security
