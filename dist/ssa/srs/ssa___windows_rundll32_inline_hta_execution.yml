name: Windows Rundll32 Inline HTA Execution
id: 0caa1dd6-94f5-11ec-9786-acde48001122
version: 1
description: The following analytic identifies "rundll32.exe" execution with inline
  protocol handlers. "JavaScript", "VBScript", and "About" are the only supported
  options when invoking HTA content directly on the command-line. This type of behavior
  is commonly observed with fileless malware or application whitelisting bypass techniques.
  The search will return the first time and last time these command-line arguments
  were used for these executions, as well as the target system, the user, process
  "rundll32.exe" and its parent process.
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), process=lower(ucast(map_get(input_event, "process"),
  "string", null)), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), process_path=ucast(map_get(input_event, "process_path"), "string",
  null), parent_process_name=ucast(map_get(input_event, "parent_process_name"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null), dest_user_id=ucast(map_get(input_event,
  "dest_user_id"), "string", null), dest_device_id=ucast(map_get(input_event, "dest_device_id"),
  "string", null) | where process IS NOT NULL AND process_name IS NOT NULL | where
  process_name="rundll32.exe" AND (like (process, "%vbscript%") OR like (process,
  "%javascript%") OR like (process, "%about%")) | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", start_time, 
  "detection_end_time", end_time, "device_entities", [create_map("uid", ucast(map_get(input_event, "enrichments.device_entities.device.uid"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", end_time, "event_id", 10100001, "event_time", timestamp, 
  "finding", create_map("confidence", 80, "confidence_id", 3, 
  "context_ids", [10, 41, 42, 45], "impact", 70, "impact_id", 4,
  "kill_chain_phase", Exploitation, "kill_chain_phase_id", 4, 
  "risk_level", Medium, "risk_level_id", 2, "type_id", 1, "ref_event_uid", event_id), 
  "message", Suspicious $process_name$ inline HTA execution on $dest_device_id$., "metadata", create_map("log_name", Endpoint_Processes, "version",
  "1.0.0"), "observables", , "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Windows Rundll32 Inline HTA Execution", "uid", "0caa1dd6-94f5-11ec-9786-acde48001122", "version", "1"), "start_time", start_time, "time", start_time,
  "user_entities", [create_map("uid", ucast(map_get(input_event, "enrichments.user_entities.user.uid"),"string", null))]) | into write_ssa_finding_events();'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: Although unlikely, some legitimate applications may exhibit
  this behavior, triggering a false positive.
references:
- https://github.com/redcanaryco/AtomicTestHarnesses
- https://redcanary.com/blog/introducing-atomictestharnesses/
- https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing
tags:
  analytic_story:
  - Suspicious MSHTA Activity
  - NOBELIUM Group
  - Living Off The Land
  cis20:
  - CIS 8
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1218
  - T1218.005
  nist:
  - PR.PT
  - DE.CM
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  - process
  security_domain: endpoint
  risk_severity: medium
test:
  name: Windows Rundll32 Inline HTA Execution Unit Test
  tests:
  - name: Windows Rundll32 Inline HTA Execution
    file: endpoint/ssa___windows_rundll32_inline_hta_execution.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.005/atomic_red_team/windows-security.log
      source: WinEventLog:Security
