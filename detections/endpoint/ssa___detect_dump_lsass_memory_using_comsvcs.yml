name: Detect Dump LSASS Memory using comsvcs
id: 76bb9e35-f314-4c3d-a385-83c72a13ce4e
version: 2
date: '2021-11-29'
author: Jose Hernandez, Splunk
type: TTP
datamodel:
- Endpoint_Processes
description: The following analytic identifies credential dumping using comsvcs.dll
  with `regsvr32.exe`. This technique is common with adversaries who would like to
  dump the memory of lsass.exe and perform offline password cracking.
search: '| from read_ssa_enriched_events() | eval tenant=ucast(map_get(input_event,
  "_tenant"), "string", null), machine=ucast(map_get(input_event, "dest_device_id"),
  "string", null), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), timestamp=parse_long(ucast(map_get(input_event, "_time"), "string",
  null)), process=lower(ucast(map_get(input_event, "process"), "string", null)), event_id=ucast(map_get(input_event,
  "event_id"), "string", null) | where process_name LIKE "%rundll32.exe%" AND match_regex(process,
  /(?i)comsvcs.dll[,\s]+MiniDump/)=true | eval start_time = timestamp, end_time =
  timestamp, entities = mvappend(machine), 
  body=create_map("category_id", 101, "class_id", 10100, "data", ["event_id", event_id,
  "process_name", process_name, "process", process], "detection_start_time", start_time, 
  "detection_end_time", end_time, "disposition_id", 1, "end_time", end_time, "event_id", 
  10100001, "event_time", timestamp, "finding", create_map("confidence", 100, "confidence_id", 3,
  "context_ids", ["Source:Endpoint", "Stage:Credential Access"], "impact", 70, "impact_id", 4,
  "kill_chain_phase", "Actions on Objectives", "kill_chain_phase_id", 7, "risk_score", 70,
  "risk_score_id", 3, "type_id", 1), "message", "A dump of lsass.exe was attempted using comsvcs.dll on endpoint.", 
  "metadata", create_map("log_name", "Endpoint_Processes", "version",
  "1.0.0"), "observables", [create_map("name", "user", "role_ids", [4], "type_id", 6, "value", 
  ucast(map_get(input_event, "dest_user_id"), "string", null)), create_map("name", "dest", 
  "role_ids", [4], "type_id", 4, "value", ucast(map_get(input_event, "dest_device_id"), "string", null))], 
  "origin", create_map("device", ucast(map_get(input_event, "dest_device_id"), 
  "string", null)), "priority_id", 0, "rule", create_map("name", "Detect Dump LSASS Memory using comsvcs", 
  "uid", "76bb9e35-f314-4c3d-a385-83c72a13ce4e"), "start_time", start_time, "time", timestamp)
  | into write_ssa_detected_events();'
how_to_implement: You must be ingesting endpoint data that tracks process activity,
  including Windows command line logging. You can see how we test this with [Event
  Code 4688](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4688a)
  on the [attack_range](https://github.com/splunk/attack_range/blob/develop/ansible/roles/windows_common/tasks/windows-enable-4688-cmd-line-audit.yml).
known_false_positives: False positives should be limited, filter as needed.
references:
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-3---dump-lsassexe-memory-using-comsvcsdll
tags:
  analytic_story:
  - Credential Dumping
  asset_type: Endpoint
  cis20:
  - CIS 8
  - CIS 16
  confidence: 100
  context:
  - Source:Endpoint
  - Stage:Credential Access
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-security.log
  impact: 70
  kill_chain_phases:
  - Actions on Objectives
  message: A dump of lsass.exe was attempted using comsvcs.dll on endpoint $dest_device_id$
    by user $dest_device_user$.
  mitre_attack_id:
  - T1003.003
  - T1003
  nist:
  - DE.CM
  observable:
  - name: dest_user_id
    type: User
    role:
    - Actor
  - name: dest_device_id
    type: Hostname
    role:
    - Victim
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process_name
  - _tenant
  - _time
  - dest_device_id
  - process
  risk_score: 70
  risk_severity: low
  security_domain: endpoint
