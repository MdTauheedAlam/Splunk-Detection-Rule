author: Michael Haag, Splunk
datamodel:
- Endpoint.Processes
date: '2021-11-12'
description: 'The following analytic identifies the Windows InstallUtil.exe binary.
  This will execute code while bypassing application control using the `/u` (uninstall)
  switch. \

  InstallUtil uses the functions install and uninstall within the System.Configuration.Install
  namespace to process .net assembly. Install function requires admin privileges,
  however, uninstall function can be run as an unprivileged user.\

  When `InstallUtil.exe` is used in a malicous manner, the path to an executable on
  the filesystem is typically specified. Take note of the parent process. In a suspicious
  instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe`
  or `Explorer.exe`. \

  If used by a developer, typically this will be found with multiple command-line
  switches/arguments and spawn from Visual Studio. \

  During triage review resulting network connections, file modifications, and parallel
  processes. Capture any artifacts and review further.'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
id: cfa7b9ac-43f0-11ec-9b48-acde48001122
known_false_positives: Limited false positives should be present. Filter as needed
  by parent process or application.
name: Windows InstallUtil Uninstall Option
references:
- https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_12
- https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/md/Installutil.exe.md
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_installutil` Processes.process
  IN ("*/u*", "*uninstall*") by Processes.dest Processes.user Processes.parent_process_name
  Processes.process_name Processes.original_file_name Processes.process Processes.process_id
  Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `windows_installutil_uninstall_option_filter`'
tags:
  analytic_story:
  - Signed Binary Proxy Execution InstallUtil
  automated_detection_testing: passed
  confidence: 100
  context:
  - Source:Endpoint
  - Stage:Defense Evasion
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1218.004/atomic_red_team/windows-sysmon.log
  impact: 80
  kill_chain_phases:
  - Exploitation
  - Privilege Escalation
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest$ by user $user$ performing an uninstall.
  mitre_attack_id:
  - T1218.004
  - T1218
  observable:
  - name: user
    role:
    - Victim
    type: User
  - name: dest
    role:
    - Victim
    type: Hostname
  - name: parent_process_name
    role:
    - Parent Process
    type: Parent Process
  - name: process_name
    role:
    - Child Process
    type: Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - Endpoint.Processes.dest
  - Endpoint.Processes.original_file_name
  - Endpoint.Processes.parent_process_id
  - Endpoint.Processes.parent_process_name
  - Endpoint.Processes.process
  - Endpoint.Processes.process_id
  - Endpoint.Processes.process_name
  - Endpoint.Processes.user
  - _time
  risk_score: 80
  security_domain: endpoint
  supported_tas:
  - Splunk_TA_microsoft_sysmon
type: TTP
version: 1
